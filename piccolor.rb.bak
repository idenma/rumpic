require 'rumale'
require "csv"
require 'numo/narray'
require './VectorTransformation'
require 'RMagick'
include Numo
include Magick
#機械学習読み込み


csvdata = CSV.read("csv/pixel.csv",headers:  true)

row = csvdata[:row_count].count - 1

pixel_samples = Int32.zeros(row + 1,64)

pixel_labels =[]

# pixel_labels = Int32.zeros(row + 1)
# pl =[]

pixelsamplescount = 0
(0..row).each do |first_number|
  (0..63).each do |second_number|
     pixel_samples[first_number, second_number] = (csvdata[first_number][second_number].to_i)
  end
  pixel_labels <<  csvdata[first_number][64].to_i
  pixelsamplescount.next

end

#pl to_a
p pixel_samples
p pixel_labels
#-----------------

encoder = Rumale::Preprocessing::LabelEncoder.new
labels = encoder.fit_transform(pixel_labels) 
#p labels
#-----------------
# ランダムフォレスト🌟
#model = Rumale::Ensemble::RandomForestClassifier.new(random_seed: 1)

# K近傍法
#model = Rumale::NearestNeighbors::KNeighborsClassifier.new(n_neighbors: 5)

# 決定木
model = Rumale::Tree::DecisionTreeClassifier.new(random_seed: 1)

#線形SVM
# model = Rumale::LinearModel::SVC.new(
  # reg_param: 0.0001,
  # fit_bias: true,
  # max_iter: 3000,
  # random_seed: 1
# )

# ナイーブベイズ
#model = Rumale::NaiveBayes::GaussianNB.new

model.fit(pixel_samples, labels)


#機械学習準備完了-------------------------------------

vector_transformation = VectorTransformation.new #画データを数字データにするクラス

#貼り付けるパーツ絵を配列に読み込み-------------------------------------

piccount = Dir.glob("./img/*").count

pastepicarray = []

(0..piccount - 1).each do |num|
  files = "./img/" + num.to_s + ".png"
    image = Image.read(files).first
    pastepicarray  << image
   
end

#pastepicarray.sort!

#絵を切り取り、配列に入れる-----------------

files = "./originalimage/colorpic.png"
originalimage = Image.read(files).first
puts originalimage.columns
puts originalimage.rows

num = 0 #パーツ絵の個数
picarray = [] #パーツ絵を入れる配列

col = originalimage.columns / 8 
row = originalimage.rows / 8

puts "col8 = " + col.to_s
puts "row8 = " + row.to_s
  
(0..row -1).each do |y|
 row8 = y * 8  
 (0..col - 1).each do |x|
  col8 = x * 8
  
 

   parts_img = originalimage.crop(col8, row8, 8, 8)
   picarray << parts_img
   num += 1 
 end
end


#機械学習で絵を番号に変える-----------------
picnumber = [] #絵の番号
(0..num - 1).each do |pic|

samples =vector_transformation.vector_transformation(picarray[pic])
picnumber << model.predict(samples).to_i
end
p picnumber


#新しい絵を作り絵を載せる-----------------
new_img = Image.new(originalimage.columns, originalimage.rows)

num = 0

(0..row -1).each do |y|
 row8 = y * 8  
 (0..col - 1).each do |x|
  col8 = x * 8
  
 
   new_img.composite!(pastepicarray[picnumber[num] ], col8, row8, OverCompositeOp)
   
   num += 1 
 end
end
#絵を新しいファイルに書き込み-----------------




new_img.write("./result/"+ ('A'..'Z').to_a.shuffle[0..10].join + ".png")